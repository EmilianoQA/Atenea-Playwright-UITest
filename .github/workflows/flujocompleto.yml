# Nombre del workflow
name: CI de Pruebas de Atenea

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Permisos
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # --- TRABAJO 1: EJECUTAR LOS TESTS ---
  test:
    name: Ejecutar Tests
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: make install
      - run: echo "BASE_URL=${{ secrets.BASE_URL }}" > .env
      - id: test-step
        continue-on-error: true
        run: make test
      - uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1
      - if: always()
        run: echo "TEST_OUTCOME=${{ steps.test-step.outcome }}" >> $GITHUB_ENV

  # --- TRABAJO 2: DESPLEGAR EL REPORTE ---
  deploy:
    name: Desplegar Reporte a GitHub Pages
    needs: test
    if: always()
    runs-on: ubuntu-latest
    # --- LA CLAVE ESTÁ AQUÍ ---
    # Exportamos la URL para que otros trabajos la puedan usar
    outputs:
      report_url: ${{ steps.deployment.outputs.page_url }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          sudo tar -zxvf allure-2.27.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.27.0/bin/allure /usr/bin/allure
      - uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results
      - run: allure generate allure-results --clean -o allure-report
      - uses: actions/configure-pages@v4
      - uses: actions/upload-pages-artifact@v3
        with:
          path: ./allure-report
      - id: deployment
        uses: actions/deploy-pages@v4

  # --- TRABAJO 3: ENVIAR NOTIFICACIÓN A SLACK ---
  notify:
    name: Enviar Notificación a Slack
    needs: [test, deploy]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Enviar notificación a Slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "Ejecución de Pruebas de Atenea Finalizada.\nVer reporte en: ${{ needs.deploy.outputs.report_url }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
